LIBRARY ieee; 
USE ieee.std_logic_1164.ALL; 
ENTITY shiftregisterclk IS 
END shiftregisterclk; 
ARCHITECTURE behavior OF shiftregisterclk IS 
COMPONENT shiftregistrer 
PORT( s : IN std_logic_vector(3 
downto 0); m : IN 
std_logic_vector(1 downto 0); y : 
OUT std_logic_vector(3 downto 0); 
clk : IN std_logic; rst : IN std_logic 
); 
END COMPONENT; 
signal s : std_logic_vector(3 downto 0) := (others => '0"); signal m 
: std_logic_vector(1 downto 0) := (others => '0â€™); signal clk : 
std_logic :='0"; 
signal rst : std_logic :='0"; 
signal y : std_logic_vector(3 downto 0); 
constant clk_period : time := 10 ns; 
BEGIN 
uut: shiftregistrer PORT MAP ( 
s=>s, 
m=>m, 
y=>Yy, 
clk => clk, 
rst => rst 
); 
clk_process :process 
begin 
clk <="1" 
wait for clk_period/2; clk <='0"; 
wait for clk_period/2; 
end process; 
stim_proc: process 
begin 
rst<="1";
wait for 10 ns; 
rst<='0"; 93 m<="00"; 
s<="0001"; 
wait for 80 ns; 96 s<="1110"; 
wait for 80 ns; 
s<="0000"; 
wait for 80 ns; 
100 
101 m<="01"; 102 
s<="0001"; 
103 wait for 80 ns; 
s<="1110"; 
wait for 80 ns; 
s<="0000"; 
wait for 80 ns; 
m<="10"; 110 s<="0001"; 
wait for 80 ns; 
s<="1110"; 
wait for 80 ns; 
s<="0000"; 
wait for 80 ns; 
m<="11"; 
s<="0001"; 
wait for 80 ns; s<="1110"; 
wait for 80 ns; 
s<="0000"; 
wait for 80 ns; 
wait; 
end process; 
END;

