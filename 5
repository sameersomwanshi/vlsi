fifo_ent.vhd 

library IEEE; 
use IEEE.STD_LOGIC_1164.ALL; 
use IEEE.STD_LOGIC_ARITH.ALL; 
23 use IEEE.STD_LOGIC_UNSIGNED.ALL; 
entity fifo_ent is 
Port (enr:in STD_LOGIC; 36 enw :in STD_LOGIC; 
dataout : out STD_LOGIC_VECTOR (3 downto 0); 
datain : in STD_LOGIC_VECTOR (3 downto 0); 
empty : out STD_LOGIC; 
full : out STD_LOGIC; 
clk : in STD_LOGIC); 
end fifo_ent; 
architecture Behavioral of fifo_ent is 
type memory_type is array(0 to 7) of std_logic_vector(3 downto 0); 
signal memory : memory_type:=(others => (others =>'0")); 
signal readptr , writeptr : std_logic_vector(3 downto 0):= "0000"; 
begin 
process(clk) 
begin 
if(clk'event and clk ='1' and enw = '1") then 
memory(conv_integer(writeptr))<= datain; 
writeptr <= writeptr + '1Â°; 
end if; 
if(clk'event and clk ='1" and enr ='1") then 
dataout <= memory(conv_integer(readptr)); 
readptr <= readptr +'1"; 
end if; 
if(readptr = "1000") then 
empty<="'1"; 
readptr<="0000"; 
else 
empty<='0"; 70 end if; 
if(writeptr = "1000") then 
full<="1"; 
writeptr<="0000"; 
else 
full<="0"; 
end if; 
end process; end Behavioral;
